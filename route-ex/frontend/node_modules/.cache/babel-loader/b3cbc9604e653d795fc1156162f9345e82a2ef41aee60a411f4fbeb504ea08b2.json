{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\udemy-react\\\\route-ex\\\\frontend\\\\src\\\\pages\\\\EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport EventsList from \"../components/EventsList\";\nimport { Await, defer, json, useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  console.log(events);\n  // const events = data?.events;\n  // return <EventsList events={events} />;\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\n\n//loader코드는 브라우저에서 실행(서버x)\nconst loader = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"Fetching events failed.\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Fetching events failed.\"\n    }, {\n      status: 500\n    });\n  } else {\n    // return response;\n    const resData = JSON.parse(response);\n    return resData === null || resData === void 0 ? void 0 : resData.events;\n  }\n};\nexport const eventsLoader = () => {\n  return defer({\n    events: loader()\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Suspense","EventsList","Await","defer","json","useLoaderData","jsxDEV","_jsxDEV","EventsPage","_s","events","console","log","fallback","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loader","response","fetch","ok","message","status","resData","JSON","parse","eventsLoader","$RefreshReg$"],"sources":["C:/vscode/udemy-react/route-ex/frontend/src/pages/EventsPage.jsx"],"sourcesContent":["import { Suspense } from \"react\";\r\nimport EventsList from \"../components/EventsList\";\r\nimport { Await, defer, json, useLoaderData } from \"react-router-dom\";\r\n\r\nfunction EventsPage() {\r\n  const { events } = useLoaderData();\r\n  console.log(events);\r\n  // const events = data?.events;\r\n  // return <EventsList events={events} />;\r\n  return (\r\n    <Suspense fallback={<p>loading...</p>}>\r\n      <Await resolve={events}>\r\n        {(loadedEvents) => <EventsList events={loadedEvents} />}\r\n      </Await>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\n//loader코드는 브라우저에서 실행(서버x)\r\nconst loader = async () => {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  if (!response.ok) {\r\n    // throw new Response(JSON.stringify({ message: \"Fetching events failed.\" }), {\r\n    //   status: 500,\r\n    // });\r\n    throw json({ message: \"Fetching events failed.\" }, { status: 500 });\r\n  } else {\r\n    // return response;\r\n    const resData = JSON.parse(response);\r\n    return resData?.events;\r\n  }\r\n};\r\n\r\nexport const eventsLoader = () => {\r\n  return defer({\r\n    events: loader(),\r\n  });\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGL,aAAa,CAAC,CAAC;EAClCM,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB;EACA;EACA,oBACEH,OAAA,CAACP,QAAQ;IAACa,QAAQ,eAAEN,OAAA;MAAAO,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eACpCP,OAAA,CAACL,KAAK;MAACiB,OAAO,EAAET,MAAO;MAAAI,QAAA,EACnBM,YAAY,iBAAKb,OAAA,CAACN,UAAU;QAACS,MAAM,EAAEU;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf;AAACT,EAAA,CAZQD,UAAU;EAAA,QACEH,aAAa;AAAA;AAAAgB,EAAA,GADzBb,UAAU;AAcnB,eAAeA,UAAU;;AAEzB;AACA,MAAMc,MAAM,GAAG,MAAAA,CAAA,KAAY;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA,MAAMrB,IAAI,CAAC;MAAEsB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE,CAAC,MAAM;IACL;IACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACP,QAAQ,CAAC;IACpC,OAAOK,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAElB,MAAM;EACxB;AACF,CAAC;AAED,OAAO,MAAMqB,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAO5B,KAAK,CAAC;IACXO,MAAM,EAAEY,MAAM,CAAC;EACjB,CAAC,CAAC;AACJ,CAAC;AAAC,IAAAD,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}