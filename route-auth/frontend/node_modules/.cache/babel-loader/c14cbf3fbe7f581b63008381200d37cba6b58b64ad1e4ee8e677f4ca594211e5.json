{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\udemy-react\\\\route-ex\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport { useParams, json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dummy = {\n  events: [{\n    id: \"e1\",\n    title: \"A dummy event\",\n    date: \"2023-02-22\",\n    image: \"https://blog.hubspot.de/hubfs/Germany/Blog_images/Optimize_Marketing%20Events%20DACH%202021.jpg\",\n    description: \"Join this amazing event and connect with fellow developers.\"\n  }]\n};\nconst EventDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  const event = data === null || data === void 0 ? void 0 : data.event;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const eventDetailLoader = async ({\n  request,\n  params\n}) => {\n  const id = params.id;\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n  if (!response.ok) {\n    throw json({\n      message: \"Fetching event failed.\"\n    }, {\n      status: 500\n    });\n  }\n  return response;\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","json","useLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","dummy","events","id","title","date","image","description","EventDetailPage","_s","data","event","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","eventDetailLoader","request","params","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/vscode/udemy-react/route-ex/frontend/src/pages/EventDetailPage.jsx"],"sourcesContent":["import { useParams, json, useLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nconst dummy = {\r\n  events: [\r\n    {\r\n      id: \"e1\",\r\n      title: \"A dummy event\",\r\n      date: \"2023-02-22\",\r\n      image:\r\n        \"https://blog.hubspot.de/hubfs/Germany/Blog_images/Optimize_Marketing%20Events%20DACH%202021.jpg\",\r\n      description:\r\n        \"Join this amazing event and connect with fellow developers.\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst EventDetailPage = () => {\r\n  const data = useLoaderData();\r\n  const event = data?.event;\r\n  return (\r\n    <>\r\n      <EventItem event={event} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nexport const eventDetailLoader = async ({ request, params }) => {\r\n  const id = params.id;\r\n  const response = await fetch(`http://localhost:8080/events/${id}`);\r\n  if (!response.ok) {\r\n    throw json({ message: \"Fetching event failed.\" }, { status: 500 });\r\n  }\r\n  return response;\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACjE,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,KAAK,GAAG;EACZC,MAAM,EAAE,CACN;IACEC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE,YAAY;IAClBC,KAAK,EACH,iGAAiG;IACnGC,WAAW,EACT;EACJ,CAAC;AAEL,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGf,aAAa,CAAC,CAAC;EAC5B,MAAMgB,KAAK,GAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,KAAK;EACzB,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA,CAACF,SAAS;MAACe,KAAK,EAAEA;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC3B,CAAC;AAEP,CAAC;AAACP,EAAA,CARID,eAAe;EAAA,QACNb,aAAa;AAAA;AAAAsB,EAAA,GADtBT,eAAe;AAUrB,eAAeA,eAAe;AAE9B,OAAO,MAAMU,iBAAiB,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAC9D,MAAMjB,EAAE,GAAGiB,MAAM,CAACjB,EAAE;EACpB,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCnB,EAAE,EAAE,CAAC;EAClE,IAAI,CAACkB,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM7B,IAAI,CAAC;MAAE8B,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACpE;EACA,OAAOJ,QAAQ;AACjB,CAAC;AAAC,IAAAJ,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}