{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\udemy-react\\\\deployment\\\\src\\\\App.js\";\n//개발->테스팅->최적화->빌드->배포\n//최적화 : lazy loading\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { lazy, Suspense } from \"react\";\nimport HomePage from \"./pages/Home\";\nimport PostPage, { loader as postLoader } from \"./pages/Post\";\nimport RootLayout from \"./pages/Root\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPage = /*#__PURE__*/lazy(_c = () => import(\"./pages/Blog\"));\n//blogpage를 필요할때만 로딩되도록(페이지와 로더 모두 적용)\n/*\n기존코드\nimport BlogPage, { loader as postsLoader } from \"./pages/Blog\";\n\nloader : 선택적 import, import는 promise 반환\nloader: () =>import(\"./pages/Blog\").then((module) => module.loader())\n\n컴포넌트  : lazy()함수\nconst BlogPage=lazy(()=>import('./pages/Blog'))\n*/\n_c2 = BlogPage;\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 14\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"posts\",\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 35\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(BlogPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this),\n      loader: () => import(\"./pages/Blog\").then(module => module.loader())\n    }, {\n      path: \":id\",\n      element: /*#__PURE__*/_jsxDEV(PostPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 35\n      }, this),\n      loader: postLoader\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BlogPage$lazy\");\n$RefreshReg$(_c2, \"BlogPage\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","lazy","Suspense","HomePage","PostPage","loader","postLoader","RootLayout","jsxDEV","_jsxDEV","BlogPage","_c","_c2","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","fallback","then","module","App","_c3","$RefreshReg$"],"sources":["C:/vscode/udemy-react/deployment/src/App.js"],"sourcesContent":["//개발->테스팅->최적화->빌드->배포\n//최적화 : lazy loading\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { lazy, Suspense } from \"react\";\n\nimport HomePage from \"./pages/Home\";\nimport PostPage, { loader as postLoader } from \"./pages/Post\";\nimport RootLayout from \"./pages/Root\";\n\nconst BlogPage = lazy(() => import(\"./pages/Blog\"));\n//blogpage를 필요할때만 로딩되도록(페이지와 로더 모두 적용)\n/*\n기존코드\nimport BlogPage, { loader as postsLoader } from \"./pages/Blog\";\n\nloader : 선택적 import, import는 promise 반환\nloader: () =>import(\"./pages/Blog\").then((module) => module.loader())\n\n컴포넌트  : lazy()함수\nconst BlogPage=lazy(()=>import('./pages/Blog'))\n*/\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    children: [\n      {\n        index: true,\n        element: <HomePage />,\n      },\n      {\n        path: \"posts\",\n        children: [\n          {\n            index: true,\n            element: (\n              <Suspense fallback={<p>loading...</p>}>\n                <BlogPage />\n              </Suspense>\n            ),\n            loader: () =>\n              import(\"./pages/Blog\").then((module) => module.loader()),\n          },\n          { path: \":id\", element: <PostPage />, loader: postLoader },\n        ],\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,SAASC,IAAI,EAAEC,QAAQ,QAAQ,OAAO;AAEtC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,QAAQ,IAAIC,MAAM,IAAIC,UAAU,QAAQ,cAAc;AAC7D,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,gBAAGT,IAAI,CAAAU,EAAA,GAACA,CAAA,KAAM,MAAM,CAAC,cAAc,CAAC,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATAC,GAAA,GAFMF,QAAQ;AAad,MAAMG,MAAM,GAAGd,mBAAmB,CAAC,CACjC;EACEe,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEN,OAAA,CAACF,UAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,IAAI;IACXN,OAAO,eAAEN,OAAA,CAACN,QAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACtB,CAAC,EACD;IACEL,IAAI,EAAE,OAAO;IACbM,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXN,OAAO,eACLN,OAAA,CAACP,QAAQ;QAACoB,QAAQ,eAAEb,OAAA;UAAAW,QAAA,EAAG;QAAU;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAE;QAAAC,QAAA,eACpCX,OAAA,CAACC,QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACX;MACDd,MAAM,EAAEA,CAAA,KACN,MAAM,CAAC,cAAc,CAAC,CAACkB,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACnB,MAAM,CAAC,CAAC;IAC3D,CAAC,EACD;MAAES,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEN,OAAA,CAACL,QAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAEd,MAAM,EAAEC;IAAW,CAAC;EAE9D,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASmB,GAAGA,CAAA,EAAG;EACb,oBAAOhB,OAAA,CAACT,cAAc;IAACa,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACO,GAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAd,EAAA,EAAAC,GAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}